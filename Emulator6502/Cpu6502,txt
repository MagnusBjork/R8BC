
using System;

namespace Emulator6502
{
    public class Cpu6502
    {
        public ushort PC { get; private set; }
        public byte IR { get; private set; }
        public bool RW { get; private set; }

        public byte X { get; private set; }
        public byte Y { get; private set; }
        public byte A { get; private set; }





        private readonly IAddressBus _addressBus;
        private readonly IDataBus _dataBus;


        private bool[] _tState = new bool[6];
        private byte _pd;   // Predecode Register

        private int _cyclesToExectue;


        public Cpu6502(IAddressBus addressBus, IDataBus dataBus)
        {
            _addressBus = addressBus;
            _dataBus = dataBus;

            // Set a temp init state for CPU to start executing.
            PC = 0x0010;
            RW = true;  // Read
            _tState[1] = true;  // T1 state

        }

        public void ExecuteCyclePHI1()
        {
            if (RW)
            {
                //-------- Read
                _addressBus.Address = PC;   // I nul채get bara PC till ABH/ABL


                if (_tState[2])
                {
                    // Fetch opcode
                    IR = _pd;           // PD l채gger datat p책 IR i T1 phi2 och latchats in i T2 phi1

                    // TODO: M책ste spara undan info om opcoden: cycles + addressing mode etc.

                }
            }
            else
            {
                //-------- Write
            }
        }

        public void ExecuteCyclePHI2()
        {
            if (RW)
            {
                //-------- Read
                _pd = _dataBus.Data;


                if (!(_tState[0] && !_tState[2]))
                    PC++;
            }
            else
            {
                //-------- Write
            }

            Console.WriteLine(_dataBus.Data);

        }

    }

}